<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.18.0201.1919                               -->
<workbook original-version='10.4' source-build='10.4.4 (10400.18.0201.1919)' source-platform='mac' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.4'>
      <aliases enabled='yes' />
      <column caption='SelectMatchNumber' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
        <members>
          <member value='3' />
          <member value='12' />
          <member value='13' />
          <member value='21' />
        </members>
      </column>
      <column caption='SelectEvent' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;PreSeasonTesting&quot;'>
        <calculation class='tableau' formula='&quot;PreSeasonTesting&quot;' />
        <members>
          <member value='&quot;PracticeSFR&quot;' />
          <member value='&quot;PreSeasonTesting&quot;' />
          <member value='&quot;SVR&quot;' />
        </members>
      </column>
      <column caption='SelectAlliance' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Red&quot;'>
        <calculation class='tableau' formula='&quot;Red&quot;' />
        <members>
          <member value='&quot;Blue&quot;' />
          <member value='&quot;Red&quot;' />
        </members>
      </column>
      <folder name='FilterParameters' role='parameters'>
        <folder-item name='[Parameter 1]' type='field' />
        <folder-item name='[Parameter 2]' type='field' />
        <folder-item name='[Parameter 3]' type='field' />
      </folder>
    </datasource>
    <datasource caption='Master A1:X3 (2018 Master Scouting Spreadsheet)' inline='true' name='federated.1vj7nw70nwy9or1ekuqmh029l42o' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2018 Master Scouting Spreadsheet' name='google-sheets.0ighg9l1ngofl91b82sth05m6czl'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='yes' compat='no' dataRefreshTime='' filename='2018 Master Scouting Spreadsheet' googleSheetId='1-je9Gl1QR5BoZuaZml0Sh4wS9JqIoHWxhXVd3IcNTJ0' interpretationMode='9' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='nikpate@nuevaschool.org' validate='no' />
          </named-connection>
          <named-connection caption='2018TBAPullData' name='google-sheets.09f88se06xne6511kvrdc0ai08dz'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='2018TBAPullData' googleSheetId='1QTdG8EFg7ob5qtzc7f6aGbVuh8vdr_faDxOfTEO1VbY' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='nikpate@nuevaschool.org' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Master].[DataID]' />
              <expression op='[Sheet1].[DataID]' />
            </expression>
          </clause>
          <relation connection='google-sheets.0ighg9l1ngofl91b82sth05m6czl' name='Master' table='[Master$]' type='table'>
            <columns gridOrigin='A1:Z10001:no:A1:Z2147483647:1' lost='0' outcome='1' processed='147'>
              <column datatype='string' name='DataID' ordinal='0' />
              <column datatype='string' name='Event' ordinal='1' />
              <column datatype='datetime' name='Timestamp' ordinal='2' />
              <column datatype='string' name='Email Address' ordinal='3' />
              <column datatype='string' name='Your Name' ordinal='4' />
              <column datatype='integer' name='Match Number' ordinal='5' />
              <column datatype='integer' name='Team Number' ordinal='6' />
              <column datatype='boolean' name='Is the robot present?' ordinal='7' />
              <column datatype='string' name='Autonomous Movement' ordinal='8' />
              <column datatype='integer' name='Number of Cubes PLACED on Alliance&apos;s Switch during AUTON' ordinal='9' />
              <column datatype='integer' name='If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f' ordinal='10' />
              <column datatype='integer' name='Number of cubes PLACED on Scale during AUTON' ordinal='11' />
              <column datatype='real' name='If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi' ordinal='12' />
              <column datatype='integer' name='Number of cubes PLACED on Alliance Switch during TELEOP' ordinal='13' />
              <column datatype='integer' name='Number cubes DROPPED at Alliance Switch during TELEOP' ordinal='14' />
              <column datatype='integer' name='Number of cubes PLACED in Scale during TELEOP' ordinal='15' />
              <column datatype='integer' name='Number cubes DROPPED at Scale during TELEOP' ordinal='16' />
              <column datatype='integer' name='Number of cubes PLACED in Opposition Switch during TELEOP' ordinal='17' />
              <column datatype='integer' name='Number of cubes DROPPED at Opposition Switch during TELEOP' ordinal='18' />
              <column datatype='integer' name='Number of cubes put into the Exchange during TELEOP' ordinal='19' />
              <column datatype='integer' name='Number of cubes DROPPED in transit (not including shuttling) during TELEOP' ordinal='20' />
              <column datatype='string' name='Robot Climb' ordinal='21' />
              <column datatype='real' name='If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to ' ordinal='22' />
              <column datatype='string' name='Comments and Observations' ordinal='23' />
              <column datatype='real' name='Number of cubes DROPPED while attempting to place in Exchange' ordinal='24' />
              <column datatype='string' name='Climb Type' ordinal='25' />
            </columns>
          </relation>
          <relation connection='google-sheets.09f88se06xne6511kvrdc0ai08dz' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:I2239:no:A1:I2239:0' header='yes' outcome='6'>
              <column datatype='string' name='Event' ordinal='0' />
              <column datatype='integer' name='Match' ordinal='1' />
              <column datatype='integer' name='Team Number' ordinal='2' />
              <column datatype='string' name='Team Name' ordinal='3' />
              <column datatype='string' name='Alliance' ordinal='4' />
              <column datatype='integer' name='Robot Position' ordinal='5' />
              <column datatype='real' name='Win/Loss' ordinal='6' />
              <column datatype='integer' name='Score' ordinal='7' />
              <column datatype='string' name='DataID' ordinal='8' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Alliance]' value='[Sheet1].[Alliance]' />
          <map key='[Autonomous Movement]' value='[Master].[Autonomous Movement]' />
          <map key='[Climb Type]' value='[Master].[Climb Type]' />
          <map key='[Comments and Observations]' value='[Master].[Comments and Observations]' />
          <map key='[DataID (Master)]' value='[Master].[DataID]' />
          <map key='[DataID]' value='[Sheet1].[DataID]' />
          <map key='[Email Address]' value='[Master].[Email Address]' />
          <map key='[Event (Sheet1)]' value='[Sheet1].[Event]' />
          <map key='[Event]' value='[Master].[Event]' />
          <map key='[If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi]' value='[Master].[If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi]' />
          <map key='[If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f]' value='[Master].[If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f]' />
          <map key='[If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to ]' value='[Master].[If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to ]' />
          <map key='[Is the robot present?]' value='[Master].[Is the robot present?]' />
          <map key='[Match Number]' value='[Master].[Match Number]' />
          <map key='[Match]' value='[Sheet1].[Match]' />
          <map key='[Number cubes DROPPED at Alliance Switch during TELEOP]' value='[Master].[Number cubes DROPPED at Alliance Switch during TELEOP]' />
          <map key='[Number cubes DROPPED at Scale during TELEOP]' value='[Master].[Number cubes DROPPED at Scale during TELEOP]' />
          <map key='[Number of Cubes PLACED on Alliance&apos;s Switch during AUTON]' value='[Master].[Number of Cubes PLACED on Alliance&apos;s Switch during AUTON]' />
          <map key='[Number of cubes DROPPED at Opposition Switch during TELEOP]' value='[Master].[Number of cubes DROPPED at Opposition Switch during TELEOP]' />
          <map key='[Number of cubes DROPPED in transit (not including shuttling) during TELEOP]' value='[Master].[Number of cubes DROPPED in transit (not including shuttling) during TELEOP]' />
          <map key='[Number of cubes DROPPED while attempting to place in Exchange]' value='[Master].[Number of cubes DROPPED while attempting to place in Exchange]' />
          <map key='[Number of cubes PLACED in Opposition Switch during TELEOP]' value='[Master].[Number of cubes PLACED in Opposition Switch during TELEOP]' />
          <map key='[Number of cubes PLACED in Scale during TELEOP]' value='[Master].[Number of cubes PLACED in Scale during TELEOP]' />
          <map key='[Number of cubes PLACED on Alliance Switch during TELEOP]' value='[Master].[Number of cubes PLACED on Alliance Switch during TELEOP]' />
          <map key='[Number of cubes PLACED on Scale during AUTON]' value='[Master].[Number of cubes PLACED on Scale during AUTON]' />
          <map key='[Number of cubes put into the Exchange during TELEOP]' value='[Master].[Number of cubes put into the Exchange during TELEOP]' />
          <map key='[Robot Climb]' value='[Master].[Robot Climb]' />
          <map key='[Robot Position]' value='[Sheet1].[Robot Position]' />
          <map key='[Score]' value='[Sheet1].[Score]' />
          <map key='[Team Name]' value='[Sheet1].[Team Name]' />
          <map key='[Team Number (Sheet1)]' value='[Sheet1].[Team Number]' />
          <map key='[Team Number]' value='[Master].[Team Number]' />
          <map key='[Timestamp]' value='[Master].[Timestamp]' />
          <map key='[Win/Loss]' value='[Sheet1].[Win/Loss]' />
          <map key='[Your Name]' value='[Master].[Your Name]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DataID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DataID (Master)]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>DataID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timestamp</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Timestamp]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Timestamp</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Email Address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Email Address]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Email Address</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Your Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Your Name]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Your Name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Match Number]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Match Number</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Team Number]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Team Number</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is the robot present?</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Is the robot present?]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Is the robot present?</remote-alias>
            <ordinal>7</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Autonomous Movement</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Autonomous Movement]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Autonomous Movement</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Cubes PLACED on Alliance&apos;s Switch during AUTON</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Cubes PLACED on Alliance&apos;s Switch during AUTON]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Number of Cubes PLACED on Alliance&apos;s Switch during AUTON</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f</remote-name>
            <remote-type>20</remote-type>
            <local-name>[If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cubes PLACED on Scale during AUTON</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of cubes PLACED on Scale during AUTON]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Number of cubes PLACED on Scale during AUTON</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi</remote-name>
            <remote-type>5</remote-type>
            <local-name>[If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cubes PLACED on Alliance Switch during TELEOP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of cubes PLACED on Alliance Switch during TELEOP]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Number of cubes PLACED on Alliance Switch during TELEOP</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number cubes DROPPED at Alliance Switch during TELEOP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number cubes DROPPED at Alliance Switch during TELEOP]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Number cubes DROPPED at Alliance Switch during TELEOP</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cubes PLACED in Scale during TELEOP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of cubes PLACED in Scale during TELEOP]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Number of cubes PLACED in Scale during TELEOP</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number cubes DROPPED at Scale during TELEOP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number cubes DROPPED at Scale during TELEOP]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Number cubes DROPPED at Scale during TELEOP</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cubes PLACED in Opposition Switch during TELEOP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of cubes PLACED in Opposition Switch during TELEOP]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Number of cubes PLACED in Opposition Switch during TELEOP</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cubes DROPPED at Opposition Switch during TELEOP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of cubes DROPPED at Opposition Switch during TELEOP]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Number of cubes DROPPED at Opposition Switch during TELEOP</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cubes put into the Exchange during TELEOP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of cubes put into the Exchange during TELEOP]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Number of cubes put into the Exchange during TELEOP</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cubes DROPPED in transit (not including shuttling) during TELEOP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of cubes DROPPED in transit (not including shuttling) during TELEOP]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Number of cubes DROPPED in transit (not including shuttling) during TELEOP</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Robot Climb</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Robot Climb]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Robot Climb</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to </remote-name>
            <remote-type>5</remote-type>
            <local-name>[If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to ]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to </remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Comments and Observations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Comments and Observations]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Comments and Observations</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cubes DROPPED while attempting to place in Exchange</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of cubes DROPPED while attempting to place in Exchange]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Number of cubes DROPPED while attempting to place in Exchange</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Climb Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Climb Type]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>Climb Type</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Master]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z10001:no:A1:Z2147483647:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>147</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Event (Sheet1)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Match]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Match</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Team Number (Sheet1)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Team Number</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Team Name</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alliance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Alliance]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Alliance</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Robot Position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Robot Position]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Robot Position</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Win/Loss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Win/Loss]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Win/Loss</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DataID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DataID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DataID</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I2239:no:A1:I2239:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='SetFilters' datatype='boolean' name='[Calculation_3603301955622236171]' role='measure' type='nominal'>
        <calculation class='tableau' formula='ATTR([Team Number]) = ATTR([Calculation_3603301955623145484])' />
      </column>
      <column aggregation='Sum' caption='AllianceMatchTeams' datatype='integer' name='[Calculation_3603301955623145484]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF ([Event] = [Parameters].[Parameter 2]) THEN (IF ([Match Number] = [Parameters].[Parameter 1]) THEN (IF([Alliance] = [Parameters].[Parameter 3]) THEN([Team Number])END)END)END' />
      </column>
      <column caption='AutonMovementPoints' datatype='integer' name='[Calculation_3603301955932160015]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Autonomous Movement] = &quot;Crosses baseline&quot;) THEN 5 END' />
      </column>
      <column caption='EventFilter' datatype='boolean' name='[Calculation_3603301955981713427]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Event] = [Parameters].[Parameter 2]' />
      </column>
      <column caption='TeleOpExchangeAccuracy' datatype='real' name='[Calculation_4673892030565888001]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number of cubes put into the Exchange during TELEOP]/([Number of cubes DROPPED while attempting to place in Exchange]+[Number of cubes put into the Exchange during TELEOP])' />
      </column>
      <column caption='TeleOpScaleAccuracy' datatype='real' name='[Calculation_4673892030566985730]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number of cubes PLACED in Scale during TELEOP]/([Number cubes DROPPED at Scale during TELEOP]+[Number of cubes PLACED in Scale during TELEOP])' />
      </column>
      <column caption='TeleOpAllianceSwitchAccuracy' datatype='real' name='[Calculation_4673892030612123651]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number of cubes PLACED on Alliance Switch during TELEOP]/([Number of cubes PLACED on Alliance Switch during TELEOP]+[Number cubes DROPPED at Alliance Switch during TELEOP])' />
      </column>
      <column caption='TeleOpEnemySwitchAccuracy' datatype='real' name='[Calculation_4673892030612287492]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number of cubes PLACED in Opposition Switch during TELEOP]/([Number of cubes PLACED in Opposition Switch during TELEOP]+[Number of cubes DROPPED at Opposition Switch during TELEOP])' />
      </column>
      <column caption='TeleOpCubePlaceTotal' datatype='integer' name='[Calculation_4673892030628995077]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number of cubes PLACED on Alliance Switch during TELEOP]+[Number of cubes PLACED in Opposition Switch during TELEOP]+[Number of cubes put into the Exchange during TELEOP]+[Number of cubes PLACED in Scale during TELEOP]' />
      </column>
      <column caption='TeleOpCubeAccuracy' datatype='real' name='[Calculation_4673892030629466118]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4673892030628995077]/([Calculation_4673892030628995077]+[Number cubes DROPPED at Alliance Switch during TELEOP]+[Number of cubes DROPPED at Opposition Switch during TELEOP]+[Number of cubes DROPPED while attempting to place in Exchange]+[Number cubes DROPPED at Scale during TELEOP])' />
      </column>
      <column caption='TeleOpClimb' datatype='integer' name='[Calculation_4673892030630739975]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Robot Climb] = &quot;Successfully Climbed and Lifted two other robots&quot;,90,IIF([Robot Climb] = &quot;Successfully Climbed and Lifted one other robot / Lifted two other robots but didn&apos;t climb&quot;,60,IIF([Robot Climb] = &quot;Only Climbed/ Only Lifted one other robot&quot;,30,IIF([Robot Climb] = &quot;None and Alliance did not activate Levitate&quot;,0,5))))' />
      </column>
      <column caption='Data ID1' datatype='string' name='[DataID]' role='dimension' type='nominal' />
      <column caption='Event1' datatype='string' name='[Event]' role='dimension' type='nominal' />
      <column caption='AutonScaleTime' datatype='real' name='[If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi]' role='measure' type='quantitative' />
      <column caption='AutonSwitchTime' datatype='integer' name='[If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f]' role='measure' type='quantitative' />
      <column caption='TeleOpClimbTime' datatype='real' name='[If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to ]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Match Number]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Match]' role='dimension' type='ordinal' />
      <column caption='TeleOpAllianceSwitchDrop' datatype='integer' name='[Number cubes DROPPED at Alliance Switch during TELEOP]' role='measure' type='quantitative' />
      <column caption='TeleOpScaleDrop' datatype='integer' name='[Number cubes DROPPED at Scale during TELEOP]' role='measure' type='quantitative' />
      <column caption='AutonSwitch' datatype='integer' name='[Number of Cubes PLACED on Alliance&apos;s Switch during AUTON]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='TeleOpEnemySwitchDrop' datatype='integer' name='[Number of cubes DROPPED at Opposition Switch during TELEOP]' role='measure' type='quantitative' />
      <column caption='TeleOpCubeTransitDrop' datatype='integer' name='[Number of cubes DROPPED in transit (not including shuttling) during TELEOP]' role='measure' type='quantitative' />
      <column caption='TeleOpExchangeDrop' datatype='real' name='[Number of cubes DROPPED while attempting to place in Exchange]' role='measure' type='quantitative' />
      <column caption='TeleOpEnemySwitchPlace' datatype='integer' name='[Number of cubes PLACED in Opposition Switch during TELEOP]' role='measure' type='quantitative' />
      <column caption='TeleOpScalePlace' datatype='integer' name='[Number of cubes PLACED in Scale during TELEOP]' role='measure' type='quantitative' />
      <column caption='TeleOpAllianceSwitchPlaced' datatype='integer' name='[Number of cubes PLACED on Alliance Switch during TELEOP]' role='measure' type='quantitative' />
      <column caption='AutonScale' datatype='integer' name='[Number of cubes PLACED on Scale during AUTON]' role='measure' type='quantitative' />
      <column caption='TeleOpExchangePlace' datatype='integer' name='[Number of cubes put into the Exchange during TELEOP]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Robot Position]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Team Number (Sheet1)]' role='dimension' type='ordinal' />
      <column caption='Team Number1' datatype='integer' name='[Team Number]' role='dimension' type='ordinal' />
      <column caption='Win Percent' datatype='real' name='[Win/Loss]' role='measure' type='quantitative' />
      <folder name='Filters' role='dimensions'>
        <folder-item name='[Calculation_3603301955623145484]' type='field' />
        <folder-item name='[Calculation_3603301955981713427]' type='field' />
      </folder>
      <folder name='FormMatchID' role='dimensions'>
        <folder-item name='[DataID (Master)]' type='field' />
        <folder-item name='[Email Address]' type='field' />
        <folder-item name='[Event]' type='field' />
        <folder-item name='[Match Number]' type='field' />
        <folder-item name='[Team Number]' type='field' />
        <folder-item name='[Timestamp]' type='field' />
        <folder-item name='[Your Name]' type='field' />
      </folder>
      <folder name='FormMisc' role='dimensions'>
        <folder-item name='[Autonomous Movement]' type='field' />
        <folder-item name='[Is the robot present?]' type='field' />
        <folder-item name='[Robot Climb]' type='field' />
      </folder>
      <folder name='FormQualitative' role='dimensions'>
        <folder-item name='[Climb Type]' type='field' />
        <folder-item name='[Comments and Observations]' type='field' />
      </folder>
      <folder name='TBAMatchID' role='dimensions'>
        <folder-item name='[Alliance]' type='field' />
        <folder-item name='[DataID]' type='field' />
        <folder-item name='[Event (Sheet1)]' type='field' />
        <folder-item name='[Match]' type='field' />
        <folder-item name='[Robot Position]' type='field' />
        <folder-item name='[Team Name]' type='field' />
        <folder-item name='[Team Number (Sheet1)]' type='field' />
      </folder>
      <folder name='AUTON' role='measures'>
        <folder-item name='[Calculation_3603301955932160015]' type='field' />
        <folder-item name='[If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi]' type='field' />
        <folder-item name='[If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f]' type='field' />
        <folder-item name='[Number of Cubes PLACED on Alliance&apos;s Switch during AUTON]' type='field' />
        <folder-item name='[Number of cubes PLACED on Scale during AUTON]' type='field' />
      </folder>
      <folder name='Filters' role='measures'>
        <folder-item name='[Calculation_3603301955622236171]' type='field' />
      </folder>
      <folder name='TBAMatchInfoMeasures' role='measures'>
        <folder-item name='[Score]' type='field' />
        <folder-item name='[Win/Loss]' type='field' />
      </folder>
      <folder name='TeleOpClimb' role='measures'>
        <folder-item name='[Calculation_4673892030630739975]' type='field' />
        <folder-item name='[If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to ]' type='field' />
      </folder>
      <folder name='TeleOpExchange' role='measures'>
        <folder-item name='[Calculation_4673892030565888001]' type='field' />
        <folder-item name='[Number of cubes DROPPED while attempting to place in Exchange]' type='field' />
        <folder-item name='[Number of cubes put into the Exchange during TELEOP]' type='field' />
      </folder>
      <folder name='TeleOpScale' role='measures'>
        <folder-item name='[Calculation_4673892030566985730]' type='field' />
        <folder-item name='[Number cubes DROPPED at Scale during TELEOP]' type='field' />
        <folder-item name='[Number of cubes PLACED in Scale during TELEOP]' type='field' />
      </folder>
      <folder name='TeleOpSwitches' role='measures'>
        <folder-item name='[Calculation_4673892030612123651]' type='field' />
        <folder-item name='[Calculation_4673892030612287492]' type='field' />
        <folder-item name='[Number cubes DROPPED at Alliance Switch during TELEOP]' type='field' />
        <folder-item name='[Number of cubes DROPPED at Opposition Switch during TELEOP]' type='field' />
        <folder-item name='[Number of cubes PLACED in Opposition Switch during TELEOP]' type='field' />
        <folder-item name='[Number of cubes PLACED on Alliance Switch during TELEOP]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.493697' measure-ordering='alphabetic' measure-percentage='0.357143' parameter-percentage='0.14916' show-aliased-fields='true' show-structure='false' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='SelectMatchNumber' datatype='integer' datatype-customized='true' folder-name='FilterParameters' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
        </column>
        <column caption='SelectEvent' datatype='string' folder-name='FilterParameters' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;PreSeasonTesting&quot;'>
          <calculation class='tableau' formula='&quot;PreSeasonTesting&quot;' />
        </column>
        <column caption='SelectAlliance' datatype='string' folder-name='FilterParameters' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Red&quot;'>
          <calculation class='tableau' formula='&quot;Red&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Auton Overview'>
      <table>
        <view>
          <datasources>
            <datasource caption='Master A1:X3 (2018 Master Scouting Spreadsheet)' name='federated.1vj7nw70nwy9or1ekuqmh029l42o' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SelectEvent' datatype='string' folder-name='FilterParameters' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;PreSeasonTesting&quot;'>
              <calculation class='tableau' formula='&quot;PreSeasonTesting&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vj7nw70nwy9or1ekuqmh029l42o'>
            <column datatype='string' name='[Autonomous Movement]' role='dimension' type='nominal' />
            <column caption='AutonMovementPoints' datatype='integer' name='[Calculation_3603301955932160015]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Autonomous Movement] = &quot;Crosses baseline&quot;) THEN 5 END' />
            </column>
            <column caption='EventFilter' datatype='boolean' name='[Calculation_3603301955981713427]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Event] = [Parameters].[Parameter 2]' />
            </column>
            <column caption='Event1' datatype='string' name='[Event]' role='dimension' type='nominal' />
            <column caption='AutonScaleTime' datatype='real' name='[If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi]' role='measure' type='quantitative' />
            <column caption='AutonSwitchTime' datatype='integer' name='[If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f]' role='measure' type='quantitative' />
            <column caption='AutonSwitch' datatype='integer' name='[Number of Cubes PLACED on Alliance&apos;s Switch during AUTON]' role='measure' type='quantitative' />
            <column caption='AutonScale' datatype='integer' name='[Number of cubes PLACED on Scale during AUTON]' role='measure' type='quantitative' />
            <column caption='Team Number1' datatype='integer' name='[Team Number]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_3603301955932160015]' derivation='Avg' name='[avg:Calculation_3603301955932160015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi]' derivation='Avg' name='[avg:If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi:qk]' pivot='key' type='quantitative' />
            <column-instance column='[If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f]' derivation='Avg' name='[avg:If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Cubes PLACED on Alliance&apos;s Switch during AUTON]' derivation='Avg' name='[avg:Number of Cubes PLACED on Alliance&apos;s Switch during AUTON:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cubes PLACED on Scale during AUTON]' derivation='Avg' name='[avg:Number of cubes PLACED on Scale during AUTON:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3603301955981713427]' derivation='None' name='[none:Calculation_3603301955981713427:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team Number]' derivation='None' name='[none:Team Number:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]'>
            <groupfilter function='member' level='[none:Calculation_3603301955981713427:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_3603301955932160015:qk]' scope='cols' value='BaseLine' />
            <format attr='subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_3603301955932160015:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_3603301955932160015:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of Cubes PLACED on Alliance&apos;s Switch during AUTON:qk]' scope='cols' value='AutonSwitch' />
            <format attr='subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of Cubes PLACED on Alliance&apos;s Switch during AUTON:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of Cubes PLACED on Alliance&apos;s Switch during AUTON:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED on Scale during AUTON:qk]' scope='cols' value='AutonScale' />
            <format attr='subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED on Scale during AUTON:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED on Scale during AUTON:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi:qk]' palette='red_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f:qk]' palette='blue_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_3603301955932160015:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of Cubes PLACED on Alliance&apos;s Switch during AUTON:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f:qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED on Scale during AUTON:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number:ok]</rows>
        <cols>([federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_3603301955932160015:qk] + ([federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of Cubes PLACED on Alliance&apos;s Switch during AUTON:qk] + [federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED on Scale during AUTON:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Climb Overview'>
      <table>
        <view>
          <datasources>
            <datasource caption='Master A1:X3 (2018 Master Scouting Spreadsheet)' name='federated.1vj7nw70nwy9or1ekuqmh029l42o' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SelectEvent' datatype='string' folder-name='FilterParameters' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;PreSeasonTesting&quot;'>
              <calculation class='tableau' formula='&quot;PreSeasonTesting&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vj7nw70nwy9or1ekuqmh029l42o'>
            <column caption='EventFilter' datatype='boolean' name='[Calculation_3603301955981713427]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Event] = [Parameters].[Parameter 2]' />
            </column>
            <column caption='TeleOpClimb' datatype='integer' name='[Calculation_4673892030630739975]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Robot Climb] = &quot;Successfully Climbed and Lifted two other robots&quot;,90,IIF([Robot Climb] = &quot;Successfully Climbed and Lifted one other robot / Lifted two other robots but didn&apos;t climb&quot;,60,IIF([Robot Climb] = &quot;Only Climbed/ Only Lifted one other robot&quot;,30,IIF([Robot Climb] = &quot;None and Alliance did not activate Levitate&quot;,0,5))))' />
            </column>
            <column caption='Event1' datatype='string' name='[Event]' role='dimension' type='nominal' />
            <column caption='TeleOpClimbTime' datatype='real' name='[If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to ]' role='measure' type='quantitative' />
            <column datatype='string' name='[Robot Climb]' role='dimension' type='nominal' />
            <column caption='Team Number1' datatype='integer' name='[Team Number]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_4673892030630739975]' derivation='Avg' name='[avg:Calculation_4673892030630739975:qk]' pivot='key' type='quantitative' />
            <column-instance column='[If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to ]' derivation='Avg' name='[avg:If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3603301955981713427]' derivation='None' name='[none:Calculation_3603301955981713427:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team Number]' derivation='None' name='[none:Team Number:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]'>
            <groupfilter function='member' level='[none:Calculation_3603301955981713427:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number:ok]' direction='DESC' using='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030630739975:qk]' />
          <slices>
            <column>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030630739975:qk]' scope='cols' value='Climb Points' />
            <format attr='subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030630739975:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030630739975:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to :qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number:ok]</rows>
        <cols>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030630739975:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='CommentsSummary'>
      <table>
        <view>
          <datasources>
            <datasource caption='Master A1:X3 (2018 Master Scouting Spreadsheet)' name='federated.1vj7nw70nwy9or1ekuqmh029l42o' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SelectEvent' datatype='string' folder-name='FilterParameters' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;PreSeasonTesting&quot;'>
              <calculation class='tableau' formula='&quot;PreSeasonTesting&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vj7nw70nwy9or1ekuqmh029l42o'>
            <column caption='EventFilter' datatype='boolean' name='[Calculation_3603301955981713427]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Event] = [Parameters].[Parameter 2]' />
            </column>
            <column datatype='string' name='[Comments and Observations]' role='dimension' type='nominal' />
            <column caption='Event1' datatype='string' name='[Event]' role='dimension' type='nominal' />
            <column caption='Team Number1' datatype='integer' name='[Team Number]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_3603301955981713427]' derivation='None' name='[none:Calculation_3603301955981713427:nk]' pivot='key' type='nominal' />
            <column-instance column='[Comments and Observations]' derivation='None' name='[none:Comments and Observations:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team Number]' derivation='None' name='[none:Team Number:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]'>
            <groupfilter function='member' level='[none:Calculation_3603301955981713427:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Comments and Observations:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number:ok]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Cubes Overview'>
      <table>
        <view>
          <datasources>
            <datasource caption='Master A1:X3 (2018 Master Scouting Spreadsheet)' name='federated.1vj7nw70nwy9or1ekuqmh029l42o' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SelectEvent' datatype='string' folder-name='FilterParameters' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;PreSeasonTesting&quot;'>
              <calculation class='tableau' formula='&quot;PreSeasonTesting&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vj7nw70nwy9or1ekuqmh029l42o'>
            <column caption='EventFilter' datatype='boolean' name='[Calculation_3603301955981713427]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Event] = [Parameters].[Parameter 2]' />
            </column>
            <column caption='TeleOpExchangeAccuracy' datatype='real' name='[Calculation_4673892030565888001]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of cubes put into the Exchange during TELEOP]/([Number of cubes DROPPED while attempting to place in Exchange]+[Number of cubes put into the Exchange during TELEOP])' />
            </column>
            <column caption='TeleOpScaleAccuracy' datatype='real' name='[Calculation_4673892030566985730]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of cubes PLACED in Scale during TELEOP]/([Number cubes DROPPED at Scale during TELEOP]+[Number of cubes PLACED in Scale during TELEOP])' />
            </column>
            <column caption='TeleOpAllianceSwitchAccuracy' datatype='real' name='[Calculation_4673892030612123651]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of cubes PLACED on Alliance Switch during TELEOP]/([Number of cubes PLACED on Alliance Switch during TELEOP]+[Number cubes DROPPED at Alliance Switch during TELEOP])' />
            </column>
            <column caption='TeleOpEnemySwitchAccuracy' datatype='real' name='[Calculation_4673892030612287492]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of cubes PLACED in Opposition Switch during TELEOP]/([Number of cubes PLACED in Opposition Switch during TELEOP]+[Number of cubes DROPPED at Opposition Switch during TELEOP])' />
            </column>
            <column caption='Event1' datatype='string' name='[Event]' role='dimension' type='nominal' />
            <column caption='TeleOpAllianceSwitchDrop' datatype='integer' name='[Number cubes DROPPED at Alliance Switch during TELEOP]' role='measure' type='quantitative' />
            <column caption='TeleOpScaleDrop' datatype='integer' name='[Number cubes DROPPED at Scale during TELEOP]' role='measure' type='quantitative' />
            <column caption='TeleOpEnemySwitchDrop' datatype='integer' name='[Number of cubes DROPPED at Opposition Switch during TELEOP]' role='measure' type='quantitative' />
            <column caption='TeleOpExchangeDrop' datatype='real' name='[Number of cubes DROPPED while attempting to place in Exchange]' role='measure' type='quantitative' />
            <column caption='TeleOpEnemySwitchPlace' datatype='integer' name='[Number of cubes PLACED in Opposition Switch during TELEOP]' role='measure' type='quantitative' />
            <column caption='TeleOpScalePlace' datatype='integer' name='[Number of cubes PLACED in Scale during TELEOP]' role='measure' type='quantitative' />
            <column caption='TeleOpAllianceSwitchPlaced' datatype='integer' name='[Number of cubes PLACED on Alliance Switch during TELEOP]' role='measure' type='quantitative' />
            <column caption='TeleOpExchangePlace' datatype='integer' name='[Number of cubes put into the Exchange during TELEOP]' role='measure' type='quantitative' />
            <column caption='Team Number1' datatype='integer' name='[Team Number]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_4673892030565888001]' derivation='Avg' name='[avg:Calculation_4673892030565888001:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4673892030566985730]' derivation='Avg' name='[avg:Calculation_4673892030566985730:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4673892030612287492]' derivation='Avg' name='[avg:Calculation_4673892030612287492:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cubes PLACED in Opposition Switch during TELEOP]' derivation='Avg' name='[avg:Number of cubes PLACED in Opposition Switch during TELEOP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cubes PLACED in Scale during TELEOP]' derivation='Avg' name='[avg:Number of cubes PLACED in Scale during TELEOP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cubes PLACED on Alliance Switch during TELEOP]' derivation='Avg' name='[avg:Number of cubes PLACED on Alliance Switch during TELEOP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cubes put into the Exchange during TELEOP]' derivation='Avg' name='[avg:Number of cubes put into the Exchange during TELEOP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3603301955981713427]' derivation='None' name='[none:Calculation_3603301955981713427:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team Number]' derivation='None' name='[none:Team Number:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4673892030612123651]' derivation='Sum' name='[sum:Calculation_4673892030612123651:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]'>
            <groupfilter function='member' level='[none:Calculation_3603301955981713427:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes put into the Exchange during TELEOP:qk]' scope='cols' value='Exchange' />
            <format attr='subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes put into the Exchange during TELEOP:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes put into the Exchange during TELEOP:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED in Scale during TELEOP:qk]' scope='cols' value='Scale' />
            <format attr='subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED in Scale during TELEOP:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED in Scale during TELEOP:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED in Opposition Switch during TELEOP:qk]' scope='cols' value='EnemySwitch' />
            <format attr='subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED in Opposition Switch during TELEOP:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED in Opposition Switch during TELEOP:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED on Alliance Switch during TELEOP:qk]' scope='cols' value='AllianceSwitch' />
            <format attr='subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED on Alliance Switch during TELEOP:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED on Alliance Switch during TELEOP:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030566985730:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030612287492:qk]' palette='orange_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[sum:Calculation_4673892030612123651:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes put into the Exchange during TELEOP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030565888001:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED in Scale during TELEOP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030566985730:qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED in Opposition Switch during TELEOP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030612287492:qk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED on Alliance Switch during TELEOP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[sum:Calculation_4673892030612123651:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number:ok]</rows>
        <cols>([federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes put into the Exchange during TELEOP:qk] + ([federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED in Scale during TELEOP:qk] + ([federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED on Alliance Switch during TELEOP:qk] + [federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED in Opposition Switch during TELEOP:qk])))</cols>
      </table>
    </worksheet>
    <worksheet name='CubesTotal'>
      <table>
        <view>
          <datasources>
            <datasource caption='Master A1:X3 (2018 Master Scouting Spreadsheet)' name='federated.1vj7nw70nwy9or1ekuqmh029l42o' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SelectEvent' datatype='string' folder-name='FilterParameters' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;PreSeasonTesting&quot;'>
              <calculation class='tableau' formula='&quot;PreSeasonTesting&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vj7nw70nwy9or1ekuqmh029l42o'>
            <column caption='EventFilter' datatype='boolean' name='[Calculation_3603301955981713427]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Event] = [Parameters].[Parameter 2]' />
            </column>
            <column caption='TeleOpCubePlaceTotal' datatype='integer' name='[Calculation_4673892030628995077]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of cubes PLACED on Alliance Switch during TELEOP]+[Number of cubes PLACED in Opposition Switch during TELEOP]+[Number of cubes put into the Exchange during TELEOP]+[Number of cubes PLACED in Scale during TELEOP]' />
            </column>
            <column caption='TeleOpCubeAccuracy' datatype='real' name='[Calculation_4673892030629466118]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4673892030628995077]/([Calculation_4673892030628995077]+[Number cubes DROPPED at Alliance Switch during TELEOP]+[Number of cubes DROPPED at Opposition Switch during TELEOP]+[Number of cubes DROPPED while attempting to place in Exchange]+[Number cubes DROPPED at Scale during TELEOP])' />
            </column>
            <column caption='Event1' datatype='string' name='[Event]' role='dimension' type='nominal' />
            <column caption='TeleOpAllianceSwitchDrop' datatype='integer' name='[Number cubes DROPPED at Alliance Switch during TELEOP]' role='measure' type='quantitative' />
            <column caption='TeleOpScaleDrop' datatype='integer' name='[Number cubes DROPPED at Scale during TELEOP]' role='measure' type='quantitative' />
            <column caption='TeleOpEnemySwitchDrop' datatype='integer' name='[Number of cubes DROPPED at Opposition Switch during TELEOP]' role='measure' type='quantitative' />
            <column caption='TeleOpExchangeDrop' datatype='real' name='[Number of cubes DROPPED while attempting to place in Exchange]' role='measure' type='quantitative' />
            <column caption='TeleOpEnemySwitchPlace' datatype='integer' name='[Number of cubes PLACED in Opposition Switch during TELEOP]' role='measure' type='quantitative' />
            <column caption='TeleOpScalePlace' datatype='integer' name='[Number of cubes PLACED in Scale during TELEOP]' role='measure' type='quantitative' />
            <column caption='TeleOpAllianceSwitchPlaced' datatype='integer' name='[Number of cubes PLACED on Alliance Switch during TELEOP]' role='measure' type='quantitative' />
            <column caption='TeleOpExchangePlace' datatype='integer' name='[Number of cubes put into the Exchange during TELEOP]' role='measure' type='quantitative' />
            <column caption='Team Number1' datatype='integer' name='[Team Number]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_4673892030628995077]' derivation='Avg' name='[avg:Calculation_4673892030628995077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4673892030629466118]' derivation='Avg' name='[avg:Calculation_4673892030629466118:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3603301955981713427]' derivation='None' name='[none:Calculation_3603301955981713427:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team Number]' derivation='None' name='[none:Team Number:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]'>
            <groupfilter function='member' level='[none:Calculation_3603301955981713427:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number:ok]' direction='DESC' using='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030628995077:qk]' />
          <slices>
            <column>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030628995077:qk]' palette='blue_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030629466118:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number:ok]</rows>
        <cols>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030628995077:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Auton Overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='2' param='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:If able to place cube on Scale during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s fi:qk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:If able to place cube on Switch during AUTON, how many seconds (from start of the match), did it take for robot to place it&apos;s f:qk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955604922375:nk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955622236171:nk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955623145484:ok]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Event:nk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Match:ok]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number (Sheet1):ok]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number:ok]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[sum:Calculation_3603301955623145484:ok]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[usr:Calculation_3603301955622236171:nk]</field>
            <field>[federated.1y5uhtx0isbg9812d6vcb0q9xacv].[attr:Calculation_3603301955590139904:nk]</field>
            <field>[federated.1y5uhtx0isbg9812d6vcb0q9xacv].[none:Calculation_3603301955590139904:nk]</field>
            <field>[federated.1y5uhtx0isbg9812d6vcb0q9xacv].[none:Calculation_3603301955607629834:ok]</field>
            <field>[federated.1y5uhtx0isbg9812d6vcb0q9xacv].[none:Event:nk]</field>
            <field>[federated.1y5uhtx0isbg9812d6vcb0q9xacv].[none:Team Number:ok]</field>
            <field>[federated.1y5uhtx0isbg9812d6vcb0q9xacv].[sum:Calculation_3603301955607629834:ok]</field>
            <field>[federated.1y5uhtx0isbg9812d6vcb0q9xacv].[usr:Calculation_3603301955607629834:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cubes Overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030565888001:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030566985730:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030612287492:qk]' type='color' />
            <card pane-specification-id='4' param='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[sum:Calculation_4673892030612123651:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Number of cubes PLACED on Alliance Switch during TELEOP:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030565888001:qk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030566985730:qk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030612287492:qk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='CubesTotal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030629466118:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030628995077:qk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:Calculation_4673892030629466118:qk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Climb Overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to :qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[avg:If the robot successfully CLIMBED, or LIFTED other robots, how many seconds, including lining up, did it take for the robot to :qk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='CommentsSummary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Calculation_3603301955981713427:nk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Comments and Observations:nk]</field>
            <field>[federated.1vj7nw70nwy9or1ekuqmh029l42o].[none:Team Number:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Auton Overview' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Climb Overview' width='384'>
      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
      eoyzh3exZdt2LnfZLHr6JZ55pGpwUlcn3BEBfIyUuArqmDwaEgBiCNWbRJIvCeVuAWCOsS7O
      GKaqHtLS/PSP9KZtYcqx+JbYxPs62f7JH9lyvAG3L483/+4NZpXk4HFrgyd2jfSMILSPMN5m
      DwzXWdbYuxiTABBDqG4vyW4vSqyHmAlDCxosWhob0Vx5qJpcCvylKYpGMJhEtE8ffrI3emkK
      92HawTF7F+poEY+0sWPNu2w82kTZ/CdY8fSjFKYn39Gj1wiF/OiJTmJRA7it9NY26e7poDvu
      HlMloCAX9OJOipu0gAc9comLbXdM9FoR6uvayMgIEAh4Hkz7HERRVfwZKTTXXyLcHx3yXqyr
      g5aeMGpGESnSjfvGbDNO3bFdbK25TOnDz/La809SNOzkPyA5K52+ji6uX73O7TVwlqHTev0K
      /Sn5ZPrcI/zk6CUBIIZSfUyfXY5m9HJgxwG64jo2A7fKXzi0jVN9XooLppDmHzu1zmOVorko
      Kp9Nal89Ww+eJWZYAFhGPyeOHOHSlW6qFs3AO7Y6naNKrLeLr/bsxy5YzBvPPkLmPW6qSy+v
      plgJU3O0hqbOm4Fs0XbtNHv3XqJsdjmp/rF1U570HcQdFNInzWFeeQ2bD2/hE7fOwmn5RJrP
      s3HrPpLypjFn9lQ8Y+xSd/Sw6W65ytn6K8QHR3XC9dcx4hHOnj6EGg5hmRo5haWUleSSP2k6
      cysOs3vLR6x1R6kozCTceIZtX+7CWzSPh6ZkjcnJx9Ei1t/CpWv9JE/p5cj+3XfcCzCgZNbD
      lGb70bx5LHu8kg837eWzzzWWzp8BfW3s2/g53aE8lldVkOQZWx0jCQAxnCuVJ55/iZ7YKg5u
      W8/5miQS0T7MlMm8/eoKSrOTHnQLxzCbcGMdmz5bS+vgPUO2aWIDJ/du4qRtY1vJPPL9HzGp
      OBdfai7LXniF7vffYee6j6kNBoj39BCcOIOXfrSCbL8Mxd2Xwcnb1rpaPqurHXGTJd4plGb7
      UVSVmY+9QFdvgi8O7ODquaMQ6ydh+3nurVepmpw35h7Op9hDn2sqBDDwuFtLj9LS1ER3YqDW
      OW9CPiG/Rx5FfF9sLNPCMA3u/OYpijL4mGEFzeVCU9WBCV7bRk/EuHHtKtGEjqUlU1CUT8Cj
      ybG4T7Zloev6Pat3NJcb182iB9vGskzCrU00d/Shai6y8ieSHkwacxPAIAEghBCOJZPAQgjh
      UBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjh
      UBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjh
      UBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjh
      UBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjh
      UBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUP8fF2imfTh8x/oA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='CommentsSummary' width='384'>
      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
      QRAE4Tf3/wO9izfXdkv6dQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Cubes Overview' width='384'>
      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
      CBGj/j/L0w/4s8JeFQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='CubesTotal' width='384'>
      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
      URNYuu57xDb+iYP7t3G+IgnViBGMGjz30pssmzcVp/50L5xiySwNMQTLsjBjIVoaG+mJgqJq
      5IzJJdnjtNey0JaFaRrEH9F3rSgqmq6jyUqXg1iWhWnEMSwFh67Z629nGG5dH4O+7jaaWzow
      VDcZ2dmkJnvQNPWpr7clASCEEDYlDTMhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAh
      hLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAh
      hLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAh
      hLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAh
      hLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAhhLApCQAh
      hLApCQAhhLApCQAhhLCp/w+idg92arCo8wAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
